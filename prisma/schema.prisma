datasource db {
  provider = "postgres"
  url      = env("PRISMA_DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
  output          = "../node_modules/.prisma/client"
}

enum GENDER {
  MALE
  FEMALE
}

enum SCHOOL_TYPE {
  GOVERNMENT
  CORPERATE
}

enum COURSE_STATUS {
  OPEN
  CLOSED
  DEPRECATED
}

model student {
  studentId String @id @default(uuid())
  firstName String
  lastName  String

  schoolId String?
  school   school? @relation(fields: [schoolId], references: [schoolId], onDelete: Cascade)

  gender               GENDER
  email                String?
  courseTeacherStudent courseTeacherStudent[]

  @@unique([firstName, lastName])
}

model school {
  schoolId String      @id @default(uuid())
  name     String
  address  String
  type     SCHOOL_TYPE

  student student[]
}

model teacher {
  teacherId            String                 @id @default(uuid())
  firstName            String
  lastName             String
  courseTeacherStudent courseTeacherStudent[]
}

model course {
  courseId String        @id @default(uuid())
  name     String
  code     String
  credit   Float
  status   COURSE_STATUS

  courseTeacherStudent courseTeacherStudent[]
}

model courseTeacherStudent {
  courseTeacherStudentId String @id @default(uuid())

  courseId String
  course   course @relation(fields: [courseId], references: [courseId])

  teacherId String
  teacher   teacher @relation(fields: [teacherId], references: [teacherId])

  studentId String
  student   student @relation(fields: [studentId], references: [studentId])
}
